// Generated by CIRCT unknown git version
module ForOp_state_machine1(
  input  [63:0] lb,
                ub,
                step,
  input         start,
                next,
                clk,
                rst,
  output [63:0] iv,
  output        done
);

  reg  [64:0] iv_reg;
  reg         done_reg;
  wire [64:0] _GEN = start ? {1'h0, lb} : iv_reg;
  wire [64:0] _GEN_0 = _GEN + {1'h0, step};
  always_ff @(posedge clk) begin
    if (rst) begin
      iv_reg <= 65'bx;
      done_reg <= 1'h0;
    end
    else begin
      if (start | next) begin
        iv_reg <= _GEN_0;
        done_reg <= _GEN_0 >= {1'h0, ub};
      end
    end
  end // always_ff @(posedge)
  assign iv = _GEN[63:0];
  assign done = done_reg;
endmodule

